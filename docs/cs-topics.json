[
  {
    "topic": "Basics of C#",
    "subtopics": [
      "Syntax & keywords",
      "Data types",
      "Variables and constants",
      "Operators",
      "Type casting and conversion",
      "Comments and code style"
    ]
  },
  {
    "topic": "Control Flow",
    "subtopics": [
      "if, else, switch",
      "for, while, do-while, foreach",
      "break, continue, return"
    ]
  },
  {
    "topic": "Object-Oriented Programming (OOP)",
    "subtopics": [
      "Classes and objects",
      "Fields and properties",
      "Methods",
      "Constructors and destructors",
      "Encapsulation",
      "Inheritance",
      "Polymorphism",
      "Abstraction"
    ]
  },
  {
    "topic": "Collections and Data Structures",
    "subtopics": [
      "Arrays",
      "List<T>",
      "Dictionary<TKey, TValue>",
      "HashSet<T>, Queue<T>, Stack<T>",
      "LINQ basics"
    ]
  },
  {
    "topic": "Exception Handling",
    "subtopics": [
      "try, catch, finally",
      "Common exceptions",
      "Custom exceptions",
      "throw keyword"
    ]
  },
  {
    "topic": "Advanced C# Features",
    "subtopics": [
      "Generics",
      "Delegates",
      "Events",
      "Func, Action, Predicate",
      "Anonymous methods and lambdas",
      "Indexers",
      "Extension methods",
      "Nullable types"
    ]
  },
  {
    "topic": "Asynchronous Programming",
    "subtopics": [
      "async and await",
      "Tasks and Task<T>",
      "ValueTask",
      "Cancellation tokens",
      "Exception handling in async"
    ]
  },
  {
    "topic": "Memory Management",
    "subtopics": [
      "Garbage collection",
      "IDisposable and using",
      "Finalizers",
      "Stack vs Heap"
    ]
  },
  {
    "topic": "File I/O and Serialization",
    "subtopics": [
      "Reading/writing files",
      "Binary and text file access",
      "JSON serialization",
      "XML serialization"
    ]
  },
  {
    "topic": "Attributes and Reflection",
    "subtopics": [
      "[Obsolete], [Serializable], [Required]",
      "Custom attributes",
      "Reflection with System.Reflection"
    ]
  },
  {
    "topic": "Design Patterns in C#",
    "subtopics": [
      "Singleton",
      "Factory",
      "Strategy",
      "Observer",
      "Dependency Injection (IoC)",
      "Repository pattern"
    ]
  },
  {
    "topic": "Testing and Debugging",
    "subtopics": [
      "Unit testing with xUnit / NUnit / MSTest",
      "Debugging tools",
      "Breakpoints and watch windows",
      "Exception trace logging"
    ]
  },
  {
    "topic": "C# and .NET Core/ASP.NET",
    "subtopics": [
      ".NET runtime and SDK",
      "Project structure (.csproj)",
      "Dependency injection in ASP.NET Core",
      "Middleware and services",
      "Entity Framework Core",
      "REST API controllers"
    ]
  }
]